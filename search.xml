<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Maven]]></title>
    <url>%2F2018%2F05%2F06%2FMaven%2F</url>
    <content type="text"><![CDATA[现在掌握的技术 目前开发存在的问题 一个项目就是一个工程 ​ 如果一个项目非常庞大，就不适合使用package来划分模块，最好是每一个模块对应一个工程，利于分工协助 ​ 借助于Maven就可以将一个项目拆分成多个工程 项目中需要的jar包必须手动复制导入到WEB-INF/lib目录下 ​ 带来的问题是同样的jar包重复出现在不同的项目工程中，一方面浪费存储空间，另外也让工程比较臃肿 ​ 利用Maven，可以将jar包仅仅保存在“仓库中”，有需要使用的工程“引用”这个文件窗口，并不需要把jar包复制过来 jar包需要别人替我们准备好，或者到官网下载 ​ 不同技术的官网提供jar包下载的形式是五花八门的； ​ 有些技术的官网就是通过Maven或SVN等专门的工具来进行下载的； ​ 如果是以非正规的方式下载的jar包其中的内容很可能也是不规范的； ​ 借助于Maven我们可以以一种规范的方式去下载jar包，因为所有知名框架或第三方工具的jar包都已经按照统一的规范存放在了Maven的中央仓库中。以规范的方式下载，内容也是可靠的。 “统一的规范”不仅是对IT开发领域非常重要，对于整个人类都是非常重要的 一个jar包依赖的其他jar包需要自己手动添加到项目中 ​ 例如FileUpload组件-&gt;IO组件；commons-fileupload-1.3.jar依赖于commons-io-2.0.1.jar包 ​ 如果所有jar包之间的依赖关系都需要程序员自己去了解，那么就会极大的增加程序员的学习成本。 ​ Maven会自动的将被依赖的jar包导入进来 Maven是什么？ Maven是一款服务于Java平台的自动化构建工具 发展历程：Make-&gt;Ant-&gt;Maven-&gt;Gradle 构建 概念：以Java源文件,框架构建文件，JSP，HTML，IMG等资源为原材料去”生产“一个可以运行的项目的过程 编译 搭建 部署 编译：Java源文件[User.java]-&gt;编译-&gt;Class字节码文件-&gt;交给JVM执行 部署：一个B/S项目运行的并不是动态Web工程本身，而是这个工程编译的结果 动态Web工程-&gt;编译，部署-&gt;编译结果 构建过程中的各个环节 清理：将以前编译得到的旧的class文件删除，为下一次编译做准备 编译：将java源程序编译成class字节码文件 测试：自动测试，自动调用junit程序 报告：测试程序的结果 打包：动态Web工程打war包，Java工程打jar包 安装：Maven特定的概念——将打包得到的文件复制到仓库中的指定位置 部署：将动态Web工程复制到Servlet容器的指定目录下，使其可以运行 自动化的构建 Maven的核心概念 约定的目录结构 POM 坐标 依赖 仓库 生命周期/插件/目标 继承 聚合 创建一个Maven工程 创建约定的目录结构 根目录：工程名 src目录：源码 pom.xml文件：Maven工程的核心配置文件 main目录：存放主程序 test目录：存放测试程序 java目录：存放java的源文件 resources:存放框架或其他工具的配置文件 为什么要遵守约定的目录结构呢？ Maven要负责这个项目的自动化构建，以编译为例，Maven要想自动的进行编译，那么它必须知道Java的源文件保存在哪里。 如果我们自己自定义的东西想要让这个框架或工具知道，有两种办法 以配置的方式明确告诉框架 1&lt;param-value&gt;classpath:spring-context.xml&lt;/param-value&gt; ​ 遵守内部已经存在的约定 12log4j.propertieslog4j.xml 约定&gt;配置&gt;编码 常用Maven命令 注意：执行与构建过程相关的Maven命令，必须进入pom.xml所在的目录 与构建过程相关：编译、测试、打包….. 常用的命令 mvn clean :清理 mvn compile:编译 mvn test-compile:编译测试程序 mvn test:执行测试 mvn package：打包 关于联网的问题 Maven的核心程序仅仅定义呢抽象的生命周期，但是具体的工作必须由特定的插件来完成，而插件本身并不包含在Maven的核心程序中。 当我们执行Maven命令需要用到某些插件时，Maven的核心程序会首先到本地仓库去查找。 本地仓库的默认位置：[系统中当前用户的HOME目录].m2\repository Maven核心程序如果在本地仓库中找不到核心的插件，它会自动连接到外网的中央仓库去下载 如果无法连接外网则构建失败 修改本地默认仓库的位置可以让Maven到我们事先准备好的目录下查找插件 找到Maven安装路径下\conf\settings.xml 在settings.xml中找到localRepository标签 将内容从注释中取出 将标签体内容修改为已经准备好的Maven仓库目录路径 POM 含义：Project Object Model 项目对象模型 DOM：Document Object Model 文档对象模型 pom.xml对于Maven工程是核心配置文件，与构建过程相关的一切设置都在这个文件中进行的配置，相当于web.xml对于Web动态工程 坐标 数学中的坐标： 在平面上使用x,y两个向量何以定义平面当作的任意一个点 在空间中，可以使用x,y,z定义一个点 Maven中的坐标 使用三个向量唯一定位一个Maven工程 [1]groupid: 公司或这个组织域名倒叙+项目名 1&lt;groupid&gt;com.xx.xx&lt;/groupid&gt; [2]artifactid:模块名 1&lt;artifactid&gt;Welcome&lt;/artifactid&gt; [3]version:版本 1&lt;version&gt;1.0.0&lt;/version&gt; 坐标与仓库中路径的对应关系 仓库 仓库的分类 本地仓库：当前电脑上部署的仓库目录，为当前电脑上所有的Maven工程服务 远程仓库 [1]私服：搭建在局域网环境中为局域网所有Maven工程服务 [2]中央仓库：架设在Internet上，为全世界的Maven工程服务 [3]中央仓库镜像：为了分担中央仓库的流量压力，提升用户的访问速度 仓库中保存的内容：Maven工程 Maven自身所需要的插件 第三方框架或工具的jar包 我们自己开发的Maven工程 ​]]></content>
  </entry>
  <entry>
    <title><![CDATA[OpenSSL详解]]></title>
    <url>%2F2018%2F01%2F07%2FOpenssl%2F</url>
    <content type="text"><![CDATA[基本概念OpenSSL-开放式安全套接层协议，是一个安全套接字层密码库，工作在OSI的传输层，囊括主要的密码算法，常用的秘钥和证书封装管理功能以及SSL协议，并提供丰富的应用程序供测试和其它目的的使用 本文主要讨论openssl的使用方法 组成其组成主要包括以下三个工具 openssl 多用途的命令行工具 libcrypto 加密算法库 libssl 加密模块应用库，实现了SSL和TLS Openssl实现：秘钥证书管理、对称加密和非对称加密 命令 对称加密 对称加密需要使用的标准命令为enc ,用法如下 123openssl enc -ciphername [-in filename] [-out filename] [-pass arg] [-e][-d] [-a/-base64][-A] [-k password] [-kfile filename] [-K key] [-iv IV] [-S salt] [-salt] [-nosalt] [-z] [-md][-p] [-P] [-bufsize number][-nopad] [-debug] [-none] [-engine id] 常用选项有： -in filename 指定要加密的文件的存放路径 -out filename 指定加密后的文件的存放路径 -salt 自动插入一个随机数作为文件内容加密，默认选项 -e 可以指明一种加密算法，若不指出的话将使用默认的加密算法 -d 解密，解密时也可以指定算法，如果不指定则使用默认算法，但是一定要与加密算法一致 -a/-base64 使用-base64位编码格式 示例 加密 1openssl enc -e -des3 -a -salt -in fstab -out jiami 解密 1openssl enc -d -des3 -a -salt -in fstab -out jiami 单向加密 单向加密需要使用的标准命令为dgst 用法如下 1openssl dgst [-md5|-md4|-md2|-sha1|-sha|-mdc2|-ripemd160|-dss1] [-c] [-d] [-hex] [-binary][-out filename] [-sign filename] [-keyform arg] [-passin arg] [-verify filename] [-prverify filename] [-signature filename] [-hmac key] [file...] 常用选项 [-md5|-md4|-md2|-sha1|-sha|-mdc2|-ripemd160|-dss1]：指定一种加密算法 -out filename 将加密内容保存到指定文件中 示例 1234openssl dgst -md5 fstab输出： MD5(fslab)= a5b3bc3338610e23226bf3345af2918ffecho &quot;jia mi nei rong&quot;|openssl dgst -md5输出：(stdin)=035da35685501a7a7cab82e736ac84c7 单向加密除了openssl dgst工具还有 md5 sum, sha1sum,sha224sum,sha256sum,sha384sum,sha512sum 生成密码 生成密码需要使用的标准命令为passwd 用法如下 1openssl passwd [-crypt] [-1] [-apr1] [-salt string] [-in file] [-stdin] [-noverify] [-quiet] [-table] &#123;password&#125; 常用选项有 -1 使用MD5加密算法 -salt string 加入随机数，最多为8位 -in file 对输入的文件内容进行加密 -stdion 对标准输入的内容进行加密 示例 1openssl passwd -1 -in fstab -salt 12345678 生成随机数 生成随机数需要用到的标准命令为rand 用法如下 1openssl rand [-out file] [-rand file(s)] [-base64] [-hex] num 常用选项有 -out filename 将生成的随机数保存到指定文件当中 -base64 使用base64编码格式 -hex 使用16进制编码格式 示例 12openssl rand -base64 1234openssl rand -hex 10 生成秘钥对 首先使用genrsa标准命令生成秘钥，然后再使用rsa 标准命令从私钥中提取公钥 genrsa的用法如下 12openssl genrsa [-out filename] [-passout arg] [-des] [-des3] [-idea] [-f4] [-3] [-rand file(s)] [-engine id] [numbits] 常用选项有 -out filename 将生成的秘钥保存至指定的文件中 -des|-des3|-idea 不同的算法 -numbits 指定生成私钥的大小 默认是2048 示例 12umask 007; openssl genrsa -out 123.txt 4096一般情况下私钥文件的权限一定要控制好，只能自己读写,因此使用umask命令来设置生成的秘钥的权限 ​ rsa的用法如下 123openssl rsa [-inform PEM|NET|DER] [-outform PEM|NET|DER] [-in filename] [-passin arg] [-out filename] [-passout arg] [-sgckey] [-des] [-des3][-idea] [-text] [-noout] [-modulus] [-check] [-pubin] [-pubout][-engine id] 常用选项 -in filename 指明私钥文件 -out filename指明将提取出的公钥保存至指定的文件中 -pubout 根据私钥提取出公钥 示例 1openssl rsa -in 123.txt -out 123.pub -pubout 创建CA和申请证书 使用openssl工具创建CA证书和申请证书时，需要先查看配置文件，因为配置文件中对证书的名称和存放位置等相关信息都做了定义，具体可参考 /etc/pki/tls/openssl.cnf 文件 创建自签证书 创建为CA提供所需的目录及文件 12mkdir -pv /etc/pki/CA/&#123;certs,crl,newcerts,private&#125;touch /etc/pki/CA/&#123;serial,index.txt&#125; 指明证书的开始编号 1echo 01 &gt;&gt; serial 生成私钥，私钥文件名与存放位置要与配置文件中的设置相匹配； 12umask 077; openssl genrsa -out /etc/pki/CA/private/cakey.pem 4096ll private/ 生成自签证书，自签证书的存放位置也要与配置文件的设置相匹配，生成证书时需要填写想要的信息； 1openssl req - new -x509 -key /etc/pki/CA/private/cakey.pem -out /etc/pki/CA/cacert.pem -days 3650 命令中用到的选项解释： -new：表示生成一个新证书签署请求 -x509：专用于CA生成自签证书，如果不是自签证书则不需要此项 -key：生成请求时用到的私钥文件 -out：证书的保存路径 -days：证书的有效期限，单位是day（天），默认是365天 颁发证书 在需要使用证书的主机上生成证书请求，以 httpd 服务为例，步骤如下： 在需要使用证书的主机上生成私钥，这个私钥文件的位置可以随意定 生成证书签署请求 将请求通过可靠方式发送给 CA 主机 12umask 077; openssl genrsa - out httpd.key 4096openssl req -key -new -key httpd.key -out httpd.csr -days 365 CA 服务器拿到证书签署请求文件后颁发证书，这一步是在 CA 服务器上做的 1openssl ca -in /httpd.csr -out /etc/pki/CA/certs/httpd.crt -days 365 查看证书信息的命令为 1openssl x509 - in /etc/pki/CA/certs/httpd.crt -noout -serial -subject 吊销证书 吊销证书的步骤也是在CA服务器上执行的，以刚才新建的 httpd.crt 证书为例，吊销步骤如下： 在客户机上获取要吊销证书的 serial 和 subject 信息 根据客户机提交的 serial 和 subject 信息，对比其余本机数据库 index.txt 中存储的是否一致 执行吊销操作 1openssl ca -revoke /etc/pki/CA/newcerts/01.pem 生成吊销证书的吊销编号 （第一次吊销证书时执行） 1echo 01 &gt; /etc/pki/CA/crlnumber 更新证书吊销列表 1openssl ca -gencrl -out /etc/pki/CA/crl/ca.crl 查看 crl 文件命令 1openssl crl -in /etc/pki/CA/crl/ca.crl -noout -text ##]]></content>
  </entry>
  <entry>
    <title><![CDATA[Java Keytool工具的使用]]></title>
    <url>%2F2018%2F01%2F07%2FKeytool%2F</url>
    <content type="text"><![CDATA[基本概念 keytool 是个密钥和证书管理工具。它使用户能够管理自己的公钥/私钥对及相关证书，用于（通过数字签名）自我认证（用户向别的用户/服务认证自己）或数据完整性以及认证服务。它还允许用户储存他们的通信对等者的公钥（以证书形式）。 ​ JDK\Bin的目录下你就可以看到keytool.exe的执行文件，不过不能双击执行。而我们通过dos的命令来创建数字证书，主要就是用keytool.exe的程序了。所有的数字证书是以一条一条(采用别名区别)的形式存入证书库的中，证书库中的一条证书包含该条证书的私钥，公钥和对应的数字证书的信息。证书库中的一条证书可以导出数字证书文件，数字证书文件只包括主体信息和对应的公钥。 名词的解释 公钥：一个详细的实体的数字关联，并有意让所有想同这个实体发生关系的其他实体知道，公钥用来检验数字签名 数字签名:是实体信息用实体的私钥 签名(加密 )后的数据，可以用公钥 来检验签名（能否解密实体信息），来鉴别实体的身份、 私钥 私钥和公钥是对应的，私钥用来计算签名 和解密公钥加密后的数据 实体 一个人，一个组织，一台计算机等等的，在网络通信中，我们通常指数据的发送方和接受方以及第三方 证书 证书是一个实体的数字签名 ，还包含这个实体的公钥 Keytool的基本用法常用命令-genkey 在用户主目录中创建一个默认文件”.keystore”,还会产生一个mykey的别名，mykey中包含用户的公钥、私钥和证书(在没有指定生成位置的情况下,keystore会存在用户系统默认目录) -alias 产生别名 -keystore 指定秘钥库的名称（就像数据库一样的证书库，可以有很多个证书，cacert这个文件是jre自带的，你也可以使用其他名字，如果没有这个文件的名字，就会使用这个默认名字 -storepass 指定秘钥库的密码 -keypass 指定别名条目的密码 -list 显示秘钥库中的证书信息 -v 显示秘钥库中的证书详细信息 -export 将别名指定的证书导出到文件 -file 参数导出的文件的文件名 -delete 删除秘钥库中的条目 -import 将已签名的数字证书导入秘钥库 -keypasswd 修改秘钥库中指定条目的口令 -dname 指定证书拥有者的信息 -keyalg 指定秘钥的算法 默认（DSA） -validity 指定创建的证书有效期是多少天（默认是90天） -keysize 指定秘钥的长度 （默认1024） -certreq 创建证书请求文件 -printcert 查看导出的证书信息 -dname 指定证书的发行者信息 常用操作说明 创建秘钥库和秘钥对 1keytool -genkey -alias mydomain -keyalg RSA -keystore keystore.jks -keysize 2048 创建一个别名为mydomain的公/私钥对，加密算法为RSA，长度为2048；一个Keystore keystore.jks 为存在keystore生成证书请求文件CSR 1keytool -certreq -alias mydomain -keystore keystore.jks -file mydomain.csr 导入根证书或中级证书导keystore 1keytool -import -trustcacerts -alias root -file mydomain.crt -keystore keystore.jks 导入SSL服务器证书到keystore 1keytool -import -trustcacerts -alias mydomain -file mydomain.crt -keystore keystore.jks 为存在的keystore生成自签名证书 1keytool -genkey -keyalg RSA -alias selfsigned -keystore keystore.jks -storepass password -validity 360 -keysize 2048 查看单个证书 1keytool -printcert -v -file mydomain.crt 列出keystore存在的所有证书 1keytool -list -v -keystore keystore.jks 使用别名查看keystore中的特定条目 1keytool -list -v -keystore keystore.jks -alias mydomain 删除keystore里面的指定证书 1keytool -delete -alias mydomain -keystore keystore.jks 更改keystore的密码 1keytool -storepasswd -new new_storepass -keystore keystore.jks 导出keystore里面指定的证书 1keytool -export -alias mydomain -file mydomain.crt -keystore keystore.jks 列出信任的CA证书 1keytool -list -v -keystore $JAVA_HOME/jre/lib/security/cacerts 导入新的CA到信任证书 1keytool -import -trustcacerts -file /path/to/ca/ca.pem -alias CA_ALIAS -keystore $JAVA_HOME/jre/lib/security/cacerts]]></content>
  </entry>
  <entry>
    <title><![CDATA[Linux下Java开发环境的搭建]]></title>
    <url>%2F2018%2F01%2F07%2FLinux-JAVA%2F</url>
    <content type="text"><![CDATA[这里我使用的是Ubuntu16.04 X64 LTS 版本搭建的Java开发环境，使用的JDK版本是jdk1.8.0_151 首先去Oracle获取Java SE 1.8.0_151的下载链接 以下所有命令都是在root权限下执行 下载安装包12wget -O jdk-8u151-linux-x64.tar.gz http://download.oracle.com/otn-pub/java/jdk/8u151-b12/e758a0de34e24606bca991d704f6dcbf/jdk-8u151-linux-x64.tar.gz?AuthParam=1515244306_3c6d4d1b02eed26d73bc874a3cf853e5^C//wget -O 保存的文件名 下载链接 解压安装包1234mkdir /usr/lib/jvm //创建文件夹tar -zxvf jdk-8u151-linux-64.tar.gz //解压文件rm jdk-8u151-linux-64.tar.gz //删除下载的文件cp -r jdk1.8.0_151 /usr/lib/jvm 拷贝文件夹到目录 配置环境变量1234567vim /etc/profile添加以下内容JAVA_HOME=/usr/lib/jvm/jdk1.8.0_151CLASSPATH=$JAVA_HOME/lib/PATH=$PATH:$JAVA_HOME/binexport PATH JAVA_HOME CLASSPATH//注意这里=两边没有空格 应用环境变量123source /etc/profile或者也可以重启机器shutdown -r now 查看安装情况123javac javajava -version 以上命令可以执行的话JAVA环境就安装完成了]]></content>
  </entry>
  <entry>
    <title><![CDATA[SSL/TLS安全协议]]></title>
    <url>%2F2018%2F01%2F06%2FSSL-TLS%2F</url>
    <content type="text"><![CDATA[概念SSL（Secure Sockets Layer安全套接层） 及其继任者传输层安全TLS（Transport Layer Security） 是为网络通信提供安全及数据完整性的一种安全协议，工作在ISO的OSI七层网络模型的传输层 SSL ：为网络通信提供安全及数据完整性的协议 TLS ：基于SSL之上的通用化协议，为SSL协议的继承者 SSL最早为NetScape所研发，用于保证Internet上的数据传输安全，保证数据在传输过程中不会被截取和窃听通用规格为40bit，但是也有128bit的更高安全标准 当前使用的版本为3.0版本，广泛用于Web浏览器与服务器之间的身份认证和加密数据传输(HTTPS） 本文主要应用SSL实现 SSL协议的分层SSL协议分为两层 SSL记录协议（SSL Record Protocal）建立在可靠连接之上（一般为TCP）为高层协议提供数据封装、压缩、加密等基本功能的支持。 原始的数据被分割成多个较短的片段，然后对每个片段分别进行压缩处理，之后这些经过压缩的每个片段会分别被加上消息验证码（为了保证数据的完整性，使用了单向的HASH函数）。然后将压缩的片段和消息认证码合并成一条数据通过对称密码进行加密。 SSL握手协议 （SSL Handshake Protocal）建立在SSL记录协议之上，用于在实际数据传输开始之前，通讯双方进行身份认证、协商加密算法、交换加密秘钥等。 握手协议 负责生成共享秘钥和交换证书（是SSL握手协议的一部分，非SSL握手协议，如上图） 密码规则变更协议 负责密码切换的同步，传达密码需要变更的信号 警告协议 负责在错误发生后将错误发送到对方 应用数据协议 负责在通信双方传输应用数据（如HTTP） 提供的服务 认证用户和服务器，确保数据发送到正确的客户机和服务器 加密数据以防止数据中途被窃听 维护数据的完整性，确保数据在传输过程中不会被改变 工作流程服务器认证阶段 Client向Server发送一个开始信息“Hello”以便开始一个新的会话连接 Server根据Client的信息确定是否需要生成新的主秘钥，如需要则Sever在响应”Hello”信息时将包含生成主秘钥所需要的信息； Client根据收到的Server响应消息，产生一个主秘钥，并使用服务器的PublicKey加密后传给Server Server回复该主秘钥，并返回给Client一个用主秘钥认证的信息，以此让Client认证Server 用户认证阶段Tips：在此阶段开始前，Server已经通过了客户认证，这一阶段的目的是让Server认证Client 经认证的的Server发送一个提问给Client Client返回使用数字签名后的提问和它的公钥，从而向服务器提供认证 详细过程 协商算法 RNC (Random Number Clilent 客户端的随机数) RNS （Random Number Server服务器的随机数） ②④ 的数据集合称为密码套件 算法信息 包含Client和Server所支持的加密算法 以及要使用的加密算法 验证证书（Client验证Server） 认证机构就是第三方认证机构CA 上述是单向认证 的请求 验证证书（服务器验证客户端） 上述是双向认证 的交互 单向认证是必须 的，双向认证根据业务的需求选择是否要进行 构建主秘钥 Master Secret PMS （ Prepare Master Secret）预备主秘钥 服务器 的公钥是在Client对服务器进行验证时，Server发送给Client的证书当中 MS （Master Secret）主秘钥 用于之后会话秘钥的构建 RNC （Random Number Clilent 客户端的随机数）在协商算法阶段发送的 RNS （Random Number Server服务器的随机数）在协商算法阶段发送的 RNC和RNS在传输过程中是没有被加密的 有可能被窃听 构建会话秘钥 MS （Master Secret） 在构建主秘钥阶段产生的 终止握手 指终止SSL握手协议的过程 正式加密交互 需要说明的上述6步如果在过程中产生了错误，那么将重新开始上述6步的过程 对于使用的加密方式，MS也就是主秘钥的构建使用的是非对称加密 如RSA、ECC等，会话阶段使用的会话秘钥是对称加密 Tips：关于这样过程的原因，非对称加密虽然能保证每一次通讯都是安全的，但是由于效率太低；所以在会话阶段使用对称加密，才能进行大规模数据传输]]></content>
  </entry>
  <entry>
    <title><![CDATA[Windows常用命令以及快捷键]]></title>
    <url>%2F2018%2F01%2F05%2FWindows%2F</url>
    <content type="text"><![CDATA[常用命令系统类 regedit 打开注册表编辑器 cmd 打开DOS运行窗口 msconfig 计算机启动管理 control 打开控制面板 slmgr.vbs -xpr 查看系统激活信息 explorer 打开资源管理器 taskmgr 打开任务管理器 dxdiag 查看电脑显卡 DirectX 系统信息等 gpedit.msc 组策略命令,打开本地组策略编辑器 appwiz.cpl 卸载或更改程序 Compmgmtlauncher 计算机管理 desk.cpl 屏幕分辨率 devicepairingwizard 给当前计算机添加设备 devmgmt.msc 设备管理器 displayswitch 显示模式切换 eventvwr 事件查看器 fsmgmt.msc 打开共享文件夹 lusrmgr.msc 本地用户和组 netplwiz 用户账户管理 slui Windows系统激活 sndvol 系统音量合成器 wscui.cpl 安全性与维护 winhlp32 Windows 帮助和支持 wf.msc 高级安全 Windows 防火墙 sysdm.cpl 系统属性 services.msc 系统服务管理 sdclt 备份和还原 rstrui 系统还原 resmon 资源监视器 powercfg.cpl 电源选项 optionalfeatures Windows 功能管理 ncpa.cpl 网络连接 网络连接管理 computerdefaults 设置程序访问此计算机的默认值 工具类 charmap 字符映射表 cleanmgr 磁盘清理 SnippingTool 打开截图工具 calc.exe打开计算器 mspaint 画图 notepad 打开记事本 write 打开写字板 mstsc 远程桌面连接 credwiz 备份系统用户名和密码 nslookup IP地址侦测器 osk 屏幕键盘 perfmon 计算机性能监视器 mdsched 内存诊断工具 rekeywiz 文件加密系统 stikynot便签工具 shrpubw 共享文件夹创建向导 mrt Microsoft Windows 恶意软件删除工具 psr 步骤记录器（PPT可分步查看，也可以注释，亦可以在windows上播放） mip 数学输入面板 magnify 放大镜 dccw 显示颜色校准 常用快捷键 CTRL+C 复制 CTRL+V 粘贴 CTRL+X 剪切 CTRL+D OR DELETE 删除 CTRL+A 全选 CTRL+S 保存 CTRL+F 查找 CTRL+W 关闭当前窗口 CTRL+Z 撤销 CTRL+ ESC 显示开始菜单 ALT+SHIFT+BACKSPACE 或CTRL+Y 重做上一步被撤销的操作 CTRL+F4 关闭当前 CTRL+TAB 切换当前选项卡向前移动 CTRL+SHIFT+TAB 切换当前选项卡向后移动 CTRL+SHIFT OR SHIFT OR WIN+空格 切换输入法 CTRL+SHIFT+ESC 或 CTRL+ALT+DELETE打 开任务管理器 F10+ALT 激活当前程序的菜单栏 F1显示Windows帮助内容 F2 重命名 F5刷新 ALT+SPACEBAR 打开程序最左上角的菜单 ALT+TAB 切换当前程序 （加SHIFT反向） ALT+ESC 切换当前程序 （加SHIFT反向） ALT+ENTER 将windows下运行的MSDOS窗口在窗口和全屏幕状态间切换 PRINT SCREEN 将当前屏幕以图像方式拷贝到剪贴板(笔记本上是PrtScSysRq) Alt+加下划线的字母 执行与该字母匹配的命令（或选择选项） Windows键+L 锁定计算机或切换用户 Windows键+M 最小化所有窗口 Windows键+R 打开“运行”对话框 Windows键+PAUSEBREAK打开“系统属性”对话框 Windows键+ 向上键最大化窗口（windowsXP不适用） Windows键+ 向左键将窗口最大化到屏幕的左侧（windowsXP不适用） Windows键+ 向左键将窗口最大化到屏幕的左侧（windowsXP不适用） Windows键+ 向右键将窗口最大化到屏幕的右侧（windowsXP不适用） Windows键+ Home最小化除活动窗口之外的所有窗口（windowsXP不适用） Windows键+ Shift + 向上键将窗口拉伸到屏幕的顶部和底部。（windowsXP不适用） Windows键+ Shift + 向左键或向右键将窗口从一个监视器移动到另一个监视器 Windows键 + T 循环切换任务栏上的程序 NUM LOCK+负号(-)折叠所选的文件夹 NUM LOCK+乘号(*)展开所选的文件夹下的所有文件及文件夹 NUM LOCK+加号(+) 展开所选的文件夹 SHIFT+上下左右 选择光标上下左右的文字 CMD常用命令 help 查看CMD的原生命令 命令+/？ 或 命令 -help 查看当前命令的用法 F7按键 或 上下键 查看使用过的命令 Ctrl+C 中断操作键 &gt;和&gt;&gt; 文件重定向 echo 写入文件内容 lable 建立磁盘卷标 vol 显示磁盘卷标命令 sandisk 检测、修复磁盘命令 defrag 整理磁盘、消除磁盘碎块 xcopy 目录复制命令 fc 文件比较命令 attrib 修改文件属性命令 shutdown 关机命令 nbstat 使用TCP/IP的NetBIOS协议显示协议统计和当前的TCP/IP连接 at 在指定的时间运行命令 ​ ipconfig 查看和管理当前计算机的网络配置 route 查看和管理当前计算机的路由表 ping 最常用的网络连通性测试命令 systeminfo 查看系统信息 tasklist 查看进程列表 netstat 查看网络状态 net 十分强大的命令，直接/?去学习吧 tracert 查看路由，更建议使用BestTracer或者WinMTR等工具，在linux下推荐MTR工具 query 查看进程 dir 查看文件夹列表 md md 文件夹名称 创建文件夹 cd cd 路径 进入路径 cd ..是返回上一级路径 rd rd 目录名 删除目录 copy copy 路径/文件名1 路径/文件名2 复制文件 del del 文件路径 删除文件 ren ren 文件路径 文件名更改文件名称 type 显示文本文件 format 磁盘格式化 discopy 复制磁盘 deltree 删除目录树 mem 查看内存及使用情况 chkdsk chkdsk 磁盘名 检查磁盘使用情况 sys 系统文件传递命令 path 设定DOS寻找.COM.EXE.BAT文件的所在目录 edit 一个简单的编辑软件，可以用来编辑程序和一些批处理文件 cls 清除屏幕上的内容 date 显示当前系统时间 ver 显示系统版本号 U盘病毒清除 命令提示符窗口中切换到U盘所在盘符]或是中了Autorun.in病毒的盘符下，依次执行命令：attrib -S -H -R autorun.inf按回车 再次执行命令：del autorun.inf ​]]></content>
  </entry>
  <entry>
    <title><![CDATA[HUAWEI路由器实训]]></title>
    <url>%2F2018%2F01%2F05%2FHUAWEI%2F</url>
    <content type="text"><![CDATA[一、基本知识基础操作1.sysname R1 命名设备(sy R1) interface g 0/0/0 (int g 0/0/0) ip address 192.168.1.1/24 （ip ad xxx） display this 查看当前设备的配置信息(dis this) undo info-center enable 关闭信息中心 （默认开启） 12345undo info-center enbale //关闭信息中心[R2]sysname R1 //命名路由器[R1]interface GigabitEthernet0/0/0//打开1000Mbps接口0/0/0[R1-GigabitEthernet0/0/0]ip address 192.168.1.2 24//配置ip地址为192.168.1.1 255.255.255.0[R1]display this //查看当前设备的配置信息 linux 权限位信息用ls命令所得到的表示法的格式是类似这样的：-rwxr-xr-x 。下面解析一下格式所表示的意思。这种表示方法一共有十位： 9 8 7 6 5 4 3 2 1 0 ​ d r w x r - x r - x 第9位表示文件类型,可以为p、d、l、s、c、b和-： p表示命名管道文件 d表示目录文件 l表示符号连接文件 -表示普通文件 s表示socket文件 c表示字符设备文件 b表示块设备文件 第8-6位、5-3位、2-0位分别表示文件所有者的权限，同组用户的权限，其他用 户的权限，其形式为rwx： r表示可读，可以读出文件的内容 w表示可写，可以修改文件的内容 x表示可执行，可运行这个程序 华为系统基础命令tips: undo取命令的反向 配置文件的删除等于恢复出厂设置 cd 进入目录 pwd 显示当前路径 dir 显示当前目录文件 mkdir 创建文件夹 rmdir 删除文件夹 undelete 从回收站找回文件 save 保存配置 display saved-configuration查看保存的文件 reset saved-configuration 恢复出厂设置 dis current-configuration xxx 只显示xxx的设置（dis cu config xxx） reboot 重启设备 compare configuration 对比当前文件和配置文件的差异 ? 查看当前用户的命令解释 language-mode Chinese 更改系统语言为中文 language-mode English 更改系统语言为英文 display ip interface brief 查看接口ip地址(dis ip int brief) display tcp status 查看tcp的信息 二、FTP的配置FTP文件传输协议使用TCP 20/21端口 20是数据端口（主动模式下使用） 21是控制端口 存在安全问题 因为账户和密码都是明文传输 FTP基础命令! - 执行本地命令 ? - 显示FTP命令的说明 append - 向远程服务器追加本地文件 ascii - 设置文件传输类型为ASCII，默认类型 bell - 每一个传输命令完成触发一次响铃（默认关闭） binary - 设置文件传输类型为binary（二进制传输） bye - 结束FTP会话并退出 cd - 改变远程工作目录 close - 结束FTP会话并返回命令行 debug - 开关调试（默认关闭） delete - 删除远程单个文件 dir - 显示远程目录文件盒子目录列表 disconnect - 从远程断开，重新获得FTP提示框 get - 复制单个远程文件到本地 glob - 开关文件名通配符（默认ON） hash - Toggles hash-sign (#) printing for each data block transferred (default = OFF) 为每个缓冲区传输切换打印“#”（哈希标记打印） help - 显示FTP命令帮助信息（用法通”?“） lcd - 改变本地工作目录 literal - Sends arguments, verbatim, to the remote FTP server 向远程FTP服务器逐字发送参数（发送任意 ftp 命令） ls - 显示远程目录文件和子目录的简短列表（只有文件名和目录名） mdelete - 删除远程一个或多个文件 mdir - 列出多个远程目录的内容 mget - 复制一个或多个远程文件至本地 mkdir - 创建一个远程目录 mls - 列出多个远程目录的内容 mput - 复制一个或多个本地文件到远程 open - 连接到指定的FTP服务器 prompt - 开关交互提示（默认为ON） put - 复制一个本地文件到远程 pwd - 显示远程当前工作目录（字面意思：打印工作目录） quit - 结束FTP会话并退出FTP（功能通bye） quote - Sends arguments, verbatim, to the remote FTP server (same as “literal”) 发送任意 ftp 命令？？ recv - 复制远程文件到本地 remotehelp - 显示远程命令帮助 rename - 重命名远程文件 rmdir - 删除远程目录 send - 复制一个本地文件到远程（功能通put） status - 显示当前FTP连接状态 trace - 开关数据包追踪（默认为OFF） type - 设置文件传输类型（默认为ASCII） user - 发送新用户信息 verbose - 开关详细模式 1、FTP Server的配置R1的配置 AAA : 认证(准入机制)、授权(给予接入的用户权限)、计费 12345[R1]ftp server enable//启用ftp服务[R1]AAA //进入AAA认证[R1-aaa]local-user hcie password cipher 123456 //设定认证用户hcie和密码123456[R1-aaa]local-user hcie service-type ftp //授权只允许使用ftp[R1-aaa]local-user hcie ftp-directory flash: //设置ftp目录(flash:/dhcp/)华为设备中的文件存储 2、FTP Cilent的配置注意：ftp需要在用户模式下进行使用 12345&lt;R2&gt;ftp 192.168.1.1//打开服务器[ftp]put flash:/dhcp/dhcp-duid.txt //上传文件[ftp]pwd //显示当前路径[ftp]dir //显示当前目录下的文件... 三、Telnet的配置Telnet服务默认开启 telnet权限 取值范围 0-15（取决于支持范围） 权限： 0级，参观级：网络诊断工具命令（ping、tracert）、从本设备出发访问外部设备的命令（Telnet客户端）等。 1级，监控级：用于系统维护，包括display等命令。 2级，配置级：业务配置命令，包括路由、各个网络层次的命令，向用户提供直接网络服务。 3级，管理级：用于系统基本运行的命令，对业务提供支撑作用，包括文件系统、FTP、TFTP、Xmodem下载、配置文件切换命令、备板控制命令、用户管理命令、命令级别设置命令、系统内部参数设置命令；用于业务故障诊断的debugging命令等 登录Telnet1&lt;R2&gt;telnet 192.168.1.1 //登录位于192.168.1.1的telnet服务器 password模式12345[R1]telnet server enable //启用Telnet服务[R1]user-interface vty 0 4 //创建可以最多登录5台设备的telnet服务器[R1-ui-vty0-4]authentication-mode password //选择模式为 password的密码[R1-ui-vty0-4]set authentication password simple 123456 //设置密码模式和密码[R1-ui-vty0-4]user privilege level 2 //设置权限级别为2 AAA模式12345[R1-ui-vty0-4]authentication-mode aaa //AAA模式[R1]AAA //进入AAA认证[R1-aaa]local-user telnet password cipher 123456 //设定认证用户telnet和密码123456[R1-aaa]local-user telnet service-type telnet //授权只允许使用telnet[R1-aaa]local-user telnet privilege level 3 //对3a认证的用户进行权限的更改 四、控制台配置设置控制台密码123[R1]user-interface console 0 //进入管理0端[R1-ui-console0]authentication-mode password //认证模式[R1-ui-console0]set authentication password simple 123456 //设置密码 设置超时时间12[R1-ui-console0]idle-timeout //无操作等待延时[R1-ui-console0]idle-timeout 0 10 //设置10s延迟 五、路由基本概念路由 源节点 到 目标节点 进行路径选择的过程 路由器 在此过程中负责选路的网络设备 路由技术 如何确定一条最佳路径的方法 路由表 （直连和非直连需要配置静态路由和动态路由来进行学习）形成） 下一跳 下一次数据提交的地方;对端设备接口的IP地址 全网互通 所有路由器路由表一致的状态 所有路由器的路由表要拥有所有网段的条目 ​ Tips:如果某个路由器有路由条目的缺失 就会导致数据不可达 IP配置 相同链路 相同网段 ;不同接口不同网段(如下图) 图表及命令 静态路由的配置12[Huawei]int LoopBack 1 //配置路由回环地址[Huawei]ip route-static 192.168.3.0 24 192.168.2.2 //静态路由配置 Proto 路由方式 Pre 优先级 Cost 消耗值 NextHop 下一跳 Interface 出口 Proto Pre（优先级） Cost NextHop Interface 路由方式 0-255 消耗值 下一跳 出口 华为路由器默认优先级 DIRECT OSPF IS-IS Static RIP IBGP OSPF ASE/import EBGP UNKNOWN 0 10 15 60 100 130 150 170 255 默认路由的配置1[LSW1]ip route-static 0.0.0.0 0 192.168.3.1 //默认路由只适用于末梢网络 默认路由适用于末梢网络 末梢网络 :只有一个网络进出口（边缘网络） 路由汇总192.168.1.0 192.168.2.0 汇总为 192.168.0.0/22 RIP的配置路由器所有直连网段全部 net xxx.xxx.xxx.xxx 123[Huawei]rip[Huawei-rip-1]net 192.168.2.0 //设置192.168.2.0为直连网段[Huawei-rip-1]preference 50 //调整动态路由的优先级为50 动态路由默认优先级为100 配置接口的附加度量值背景信息通过调整RIP接口的附加度量值来影响路由的选择。 附加路由度量值是指在RIP路由原来度量值的基础上所增加的度量值（跳数，等于入口消耗+出口消耗的值）。对于 R IP接收和发布路由，可通过不同的命令配置附加度量值。 1234[R4]int GigabitEthernet 0/0/1 进入接口根据需求选择以下两个配置之一[R4-GigabitEthernet0/0/1]rip metricin 2 //设置该入口消耗值为3[R4-GigabitEthernet0/0/1]rip metricout 3 //设置该出口消耗值为3 OSPF的配置Tips:支持区域划分 1234[Huawei-rip-1]ospf[Huawei-ospf-1]a [Huawei-ospf-1]area 0[Huawei-ospf-1-area-0.0.0.0]net 192.168.1.0 0.0.0.255 Tips：在OSPF中，一次性宣告当前设备的所有网段也可以实现上述操作 1[Huawei-ospf-1-area-0.0.0.0]net 192.168.1.0 0.0.0.255 Tips:OSPF网络中Loopback接口默认的网络类型为P2P 学习到的网段掩码是32 12[Huawei]int LoopBack 1[Huawei-LoopBack1]ospf network-type broadcast //更改网络类型即可 路由引入（路由重发布）12[R3]ospf[R3-ospf-1]import-route static//引入静态路由 IS-IS配置Tips:所有使用的接口都要打开isis R1的配置 1234567[Huawei]isis[Huawei-isis-1]network-entity //NET N-network E- T 网络实体名称[Huawei-isis-1]network-entity 49.0001.0000.0000.0001.00 前面两个是区域 中间三段式路由器 两个0是固定的 用于路由器上支持ip协议的[Huawei]int LoopBack 1[Huawei-LoopBack1]isis enable[Huawei]int G0/0/0[Huawei-GigabitEthernet0/0/0]isis enable R2的配置 1[Huawei-isis-1]network-entity 49.0001.0000.0000.0002.00 BGP配置Tips:如果邻居的AS和我不一样 说明是我们两个不在同一个网络（EBGP关系），如果一样则为IBGP关系 负责传递互联网之间的路由的协议 R1 1234[Huawei]bgp 100[Huawei-bgp]peer 192.168.2.2 as-number 100 //邻居的AS编号[Huawei-bgp]network 192.168.1.10 24[Huawei-bgp]network 192.168.2.0 24 BGP的优先级更改 1[Huawei-bgp]preference 5 5 5// EBGP IBGP ...优先级 六、DHCP 动态主机配置协议实现为接入设备配置网络参数的能力 实现方式 主机（系统） 设备（网络） 系统和网络互为实现 地址池 接口，只为一个网段分配网络参数 全局，为所有网段分配网络参数 路由器DHCP配置接口地址池配置12345[Huawei]dhcp enable //启用DHCP[Huawei]interface g0/0/0 //进入接口[Huawei-GigabitEthernet0/0/0]ip address 192.168.1.1 24 //设置端口ip地址[Huawei-GigabitEthernet0/0/0]dhcp select interface //将dhcp模式设置为接口地址池模式[Huawei-GigabitEthernet0/0/0]dhcp server dns-list 8.8.8.8 //设置DNS服务器地址 全局地址池配置1234567891011121314[Huawei]dhcp enable //启用DHCP[Huawei]ip pool hcie //创建ip地址池hcie[Huawei-ip-pool-hcie]network 192.168.1.0 mask 24//设置ip地址池[Huawei-ip-pool-hcie]gateway-list 192.168.1.1 //设置网关[Huawei-ip-pool-hcie]excluded-ip-address 192.168.1.254 //禁用254ip[Huawei-ip-pool-hcie]static-bind ip-adstatic-bind ip-address 192.168.1.250 mac 5489-987B-1D7A //设置ip与mac地址绑定[Huawei-ip-pool-hcie]lease day 3[Huawei-ip-pool-hcie]lease day 3 hour 5 //设置ip地址租期[Huawei-ip-pool-hcie]dns-list 8.8.8.8 //设置dns[Huawei-GigabitEthernet0/0/0]ip ad 192.168.1.2 24 //设置路由器端口ip[Huawei-GigabitEthernet0/0/0]dhcp select global //设置端口的dhcp模式[Huawei-ip-pool-hcie]option //其他dhcp的设置[Huawei]display ip pool name hcie//查看hcie 的情况[Huawei]dis ip pool name hcie used //查看地址池使用情况 客户端操作12ipconfig /realese //删除得到的信息ipconfig /renew //重新获取信息 路由器DHCP中继的配置单播 一对一，针对性强 广播 一对所有，便利性 组播 一对多，两者兼具 入 目标地址是自己 出 源地址是自己 转发 源目的地址都不是自己 客户端与网关设备之间是广播 网关设备与DHCP服务器之间是单播 1234567891011121314151617181920212223242526按照上图配置路由器端口ip地址，所有路由器配置RIP 此过程不再赘述。R1路由器配置[R1]dhcp enable //打开dhcp服务[R1]int GigabitEthernet 0/0/0 //进入端口0/0/0[R1-GigabitEthernet0/0/0]dhcp select relay //设置接口为dhcp中继模式[R1-GigabitEthernet0/0/0]dhcp relay server-ip 192.168.4.2 //设置中继的dhcp服务器IP地址R2路由器的配置[R2]dhcp enable //打开DHCP服务[R2]int GigabitEthernet 0/0/0[R2-GigabitEthernet0/0/0] dhcp select relay //设置该接口为dhcp中继模式[R2-GigabitEthernet0/0/0]dhcp relay server-ip 192.168.4.2 //设置要中继的dhcp服务器地址R3路由器的配置[R3]dhcp enable //打开dhcp服务[R3]int GigabitEthernet0/0/2 //进入端口[R3-GigabitEthernet0/0/2]dhcp select global //选择为dhcp全局模式 [R3-GigabitEthernet0/0/2]quit[R3]ip pool 1 //创建地址池1[R3-ip-pool-1]network 192.168.1.0 mask 24 //设置ip地址池[R3-ip-pool-1]gateway-list 192.168.1.1 //设置网关地址[R3-ip-pool-1]dns-list 8.8.8.8 //设置dns[R3-ip-pool-1]lease day 3 hour 5 //设置ip地址租期[R3]ip pool 2 //创建地址池2[R3-ip-pool-2]network 192.168.2.0 mask 24//设置ip地址池[R3-ip-pool-2]gateway-list 192.168.2.1 //设置网关地址[R3-ip-pool-2]dns-list 8.8.8.8//设置dns[R3-ip-pool-2]lease day 3 hour 5 //设置地址租期 七、VLAN 局域网（Virtual Local Area Netwok）VLAN基本概念 对逻辑局域网络进行逻辑的划分 为什么要划分VLAN？ 划分的方式 广播的产生 对目标的未知就会产生广播 任何一个节点都存在对目标的未知 节点数越多吗，广播流量越大 在二层网络当中 广播流量超过总流量的20%-30%，说明网络需要优化 必须进行切割 隔离 网络隔离的方式 物理 路由器 1.增加设备 增加成本 2.改变了网络的拓扑结构 3.灵活性不够 逻辑 交换机(VLAN技术) 接口的链路类型 Access 专用，只承载一个VLAN的数据 Trunk 公共，可以承载所有VLAN的数据 Hybrid 混合，xxxx，华为路由器默认链路类型 VLAN封装协议802.1q (公有) ISL(Cisco私有) VLAN基本配置 VLAN基本命令123456[LSW1]display vlan //查看vlan信息[LSW1]vlan batch 10 20 30 //批量创建vlan10 vlan 20 vlan 30LSW1]vlan batch 10 to 20 //批量创建vlan10-vlan20[LSW1]vlan10 //创建或者打开vlan10[LSW1-vlan10]description 1 //将vlan10命名为1[LSW1]display port vlan //查看vlan的链路类型以及PVID 端口类型转换需要将端口类型转换成acess才能将端口添加至其他vlan 1234[LSW1-GigabitEthernet0/0/1]port link-type access //将端口类型换成acess[LSW1-GigabitEthernet0/0/1]port default vlan 10//将端口添加到vlan [LSW2-vlan10]port Ethernet 0/0/1/在vlan组里面添加端口 这步命令才能执行[LSW2-Ethernet0/0/8]undo portswitch //将交换接口转换成路由接口 （华为大部分S系列交换机不支持） 定义端口组实现对端口进行批量操作 1234[LSW1]port-group hcie //创建端口组[LSW1-port-group-hcie]group-member e 0/0/5 to e 0/0/15 e 0/0/17 g 0/0/1 //添加e5-e15，e17,g1到端口组 [LSW1-port-group-hcie]port link-type access//组内端口设置为Acessm模式 [LSW1-port-group-hcie]port default vlan 30 //组内端口划分给vlan30 中继链路的配置VLAN数据帧是否被交换机所转发的条件 1. 交换机中要有这个VLAN存在 2. 交换机收发的VLAN列表中要有这个VLAN的存在 12345[LSW1]int Ethernet 0/0/4[LSW1-Ethernet0/0/4]port link-type trunk //更改链路类型为Trunk[LSW1-Ethernet0/0/4]port trunk allow-pass vlan all //端口允许所有vlan通过[LSW1-Ethernet0/0/4]display port vlan active e 0/0/4 //查看端口vlan通过信息LSW2的配置相同 VLAN的四种情况 交换机\VLAN 相同 不同 相同 直接通讯 三层设备 不同 中继链路 三层设备 相同交换机 相同VLAN 直接通讯 相同交换机 不同VLAN 三层设备通讯(路由) 不同交换机 相同VLAN 中继链路 不同交换机 不同VLAN 三层路由（路由） 数据传递过程当中，VLAN必须保证不变化，中间人如果更改，会导致数据包不可达 两个节点通讯的前提条件 在同一个网路 在同一个网段 ​ 按照上图配置VLAN接口的ip地址 123[LSW1]interface vlan 10 进入vlan10接口[LSW1-Vlanif10]ip ad 192.168.10.1 24 //配置ip[LSW1-Vlanif10]dis ip interface brief // ​ ​ 上述配置完成后的三层交换路由表 八、ACL访问控制列表基本概念 允许 或 拒绝 数据包通过 单独使用 包过滤功能 结合使用 作为工具被其他技术调用（VPN NAT 策略路由 路由策略…….）(更多) 分类 基本 高级 过滤包 源ip 源ip、目标ip、源端口、目标端口、协议、选项等 优点 效率高（首选） 功能全 取值范围 2000-2999 3000-3999 基本ACL语法rule [ rule-id ] { deny | permit } [ rule-string ] rule-id：ACL规则编号，取值范围为0～65534 deny：表示丢弃符合条件的数据包 permit：表示允许符合条件的数据包通过 高级ACL语法rule [ rule-id ] { deny | permit } protocol [ rule-string ] rule-id：ACL规则编号，取值范围为0～65534 deny：表示丢弃符合条件的数据包 permit：表示允许符合条件的数据包通过。 protocol：IP承载的协议类型。用数字表示时，取值范围为1～255；用名字表示时，可以选取 gre（47）、icmp（1）、igmp（2）、ip、ipinip（4）、ospf（89）、tcp（6）、udp（17） 规则 按序检查 匹配停止 默认允许（Cisco默认拒绝） 访问列表的配置步骤 系统模式全局定义 接口模式引用 需要确定的三个问题 哪个路由器？ 哪个接口？ 哪个方向? 答案是都可以，但是需要考虑一些因素 数据是否经过 是否有权限对设备进行配置 合理性 寻找最优规则 ​ ACL访问控制列表实例 1234567[AR1]ACL 3000 //设置3000的高级访问控制列表[AR1-acl-adv-3000]rule deny ICMP source 192.168.1.0 0.0.0.255//网段[AR1-acl-adv-3000]rule deny ICMP source 192.168.1.2 0.0.0.0 //只有这个地址[AR1-acl-adv-3000]rule deny ICMP source 192.168.1.2 0.0.0.255 destination 192.168.5.2 0.0.0.0 icmp-type echo //拒绝ping的回复包[AR1-acl-adv-3000]rule deny tcp source 192.168.1.2 0 destination 192.168.5.2 0 destination-port eq 80 //拒绝80端口TCP连接 HTTP协议[AR1-acl-adv-3000]rule deny IP source 192.168.1.2 0.0.0.255 destination 192.168.3.2 0 //拒绝来自的192.168.3.2的数据包[AR1-GigabitEthernet0/0/0]traffic-filter inbound acl 3000 //端口GigabitEthernet0/0/0启用ACL规则 九、GVRP 通用VLAN注册协议基础知识动态学习VLAN 必须使用Trunk链路 全局GVRP 接口GVRP 参与的接口都要启用GVRP 中间过渡交换机 边缘介入交换机 port link-type trunk12345[LSW1]GVRP //全局配置GVRP[LSW1]int GigabitEthernet 0/0/1[LSW1-GigabitEthernet0/0/1] port link-type trunk[LSW1-GigabitEthernet0/0/1]port trunk allow-pass vlan all [LSW1-GigabitEthernet0/0/1]GVRP VLAN类型的不同，对于各技术的支持程序是不一样的 有些VLAN不支持有些技术 十、链路聚合将多条物理的链路捆绑成为一条逻辑的链路 提高带宽，负载均衡，冗余备份 参与链路聚合的端口所有参数必须保持一致性 二层聚合、三层聚合 二层链路聚合，一般都建议将聚合后的链路配置为Trunk 链路聚合后，对端口的配置，是配置Eth-Trunk逻辑接口而不是物理接口 链路聚合的配置 模式 手动 ，默认，只能做负载均衡 LACP静态 LACP：链路聚合控制协议 链路聚合基本配置交换机的链路聚合配置123456[Huawei]interface Eth-Trunk 1 //创建Eth-Thrunk1逻辑接口， 0-63的取值范围[Huawei-Eth-Trunk1]trunkport e 0/0/1 to 0/0/3 //将0-3配置成聚合LSW2执行相同配置更改模式为lacp-static Trunk模式不行[Huawei-Eth-Trunk1]mode lacp-static [Huawei-Eth-Trunk1]max Active-linknumber 2 设置最大活动链接数 路由器链路聚合的配置12345[R1]int e 1 //创建逻辑端口1[R1-Eth-Trunk1]trunkport g 0/0/0 to 0/0/1 // 添加G0/0/0 和G0/0/1到逻辑端口1[R1-Eth-Trunk1]ip ad 192.168.1.1 24 //添加逻辑接口1的IPR2前面配置相同，ip配置不同[R2-Eth-Trunk1]ip ad 192.168.1.2 24 //给R2上的逻辑端口设置IP地址 十一、STP，生成树环路 ：不可避免，或多或少都会产生 原因 ：人为、协议缺陷 二层 ，STP 三层 ，TTL 消除环路但是不能避免环路 STP的作用 防止环路 数据流控 树形结构的特点 连续性 唯一性 根网桥、根端口、指定端口 根网桥 根端口 指定端口 阻塞端口 所有端口都是指定端口（理论） 级联向上 级联向下 其他端口 Tips：生成树的最终目的是为了选举阻塞端口* 选举依据 根路径成本 网桥ID 端口ID 注意 Tips:STP使用桥协数据单元BPDU帧计算根,传输选举依据 生成树端口的状态交换机端口的5种STP状态转发 转发数据包 收发BPDU 学习MAC地址 学习 收发 BPDU 处理BPDU 学习MAC地址 侦听 接收、处理、转发BPDU 阻塞 接收并处理BPDU 但是不转发 禁用 什么都没有 接收BPDU 处理BPDU 转发BPDU 学习MAC 收发数据帧 转发 1 1 1 1 1 学习 1 1 1 1 0 侦听 1 1 1 0 0 阻塞 1 1 0 0 0 禁用 0 0 0 0 0 STP的三种计时器 HELLO 2 转发延迟 15s 最大老化时间 20S Tips：因为端口转换的时间过长，不能快速收敛 12&lt;Huawei&gt;display stp brief [Huawei]stp priority 0 //可以设置 4096 8192.... 倍数 使用MSTP（多生成树）完成常见组网需求配置 12345678910111213141516171819202122231、链路聚合[LSW1]int e 1[LSW1-Eth-Trunk1]trunkport g 0/0/1[LSW1-Eth-Trunk1]trunkport g 0/0/2LSW2执行相同操作2、创建VLAN[LSW1]vlan b 10 20 30 40LSW2 LSW3 LSW4 执行相同操作3、中继链路[LSW4]int e 1[LSW4-Eth-Trunk1]port link-type trunk [LSW4-Eth-Trunk1]port trunk allow-pass vlan all4、MSTP配置 [LSW1]stp region-configuration [LSW1-mst-region]region-name hcie //创建区域HCIE[LSW1-mst-region]instance 1 vlan 10 20[LSW1-mst-region]instance 2 vlan 30 40[LSW1-mst-region]revision-level ?//级别[LSW1-mst-region]active region-configuration //区域配置LSW2 LSW3 LSW4 执行相同配置[LSW1]stp instance 1 priority 0或者[LSW1]stp instance 1 root primary [LSW1]stp instance 2 root secondary LSW2交换顺序 1为备 2为主 ​ 上述配置完成后LSW3的配置 Tips：交换机端口的角色与状态与实例的多少成正比，一个端口在不同的实例中会有不同的角色与状态* Tips：默认情况所有VLAN属于生成树实例0 十二、 GRE隧道配置 按照上图配置，要实现全网互通，可以使用路由引入。也可以如下设置GRE隧道。 12345678910111213141516171819[R2]int Tunnel 0/0/0 //创建并进入一个逻辑隧道接口[R2-Tunnel0/0/0]ip address 123.123.123.1 24 //给逻辑隧道接口一个IP地址，实现与对端隧道接口的通讯[R2-Tunnel0/0/0]tunnel-protocol gre 选择逻辑接口协议为GRE[R2-Tunnel0/0/0]source 192.168.2.1 //源端端口[R2-Tunnel0/0/0]destination 192.168.3.2 //目的端端口[R2-rip-1]net 123.0.0.0 //添加rip规则[R1-rip-1]version 2 更改RIP版本为版本2[R1-rip-1]summary always 更改为汇总（默认是开启的）[R1]int loo 1[R1-LoopBack1]ip ad 10.10.10.1 32[R1-LoopBack1]ip ad 10.10.10.2 32 sub[R1-LoopBack1]ip ad 10.10.10.3 32 sub //给回环端口添加3个ip地址[R1]rip[R1-rip-1]net 10.0.0.0//添加rip规则[R1]acl 2000[R1-acl-basic-2000]rule deny source 10.10.10.2 0 //创建基本ACL规则 拒绝所有来自10.10.10.2的包[R1-rip-1]filter-policy 2000 import g0/0/0 //不允许入[R1-rip-1]filter-policy 2000 export g0/0/0 //不允许出[R1-acl-basic-2000]rule permit//允许通过所有协议 ​ GRE配置成功后R5的路由表 Tips:在rip里面，network只能按照有类宣告ip地址* Tips:RIP的汇总默认是开启的，如果有水平分割，毒性逆转，则不开启 十三、NAT网络地址转换​ 实现私有IP地址与公有IP地址之间的互换 IP地址 有类 A B C D E类 无类 ……… 公有私有 用于局域网，不能在公共网上路由 转换类型静态 一个公有IP对一个私有IP转换,没有节省到IP 一对一，没有节省IP地址网络 通讯内外都可以触发 动态 少数公有IP对于数据私有IP 会引入地址池 地址池需要配置定义 轮训调用机制 需要注意，地址池的公网IP能否满足 私有IP的转换要求 PAT 用一个接口的公有IP对应所有IP EasyIP的配置 123456按照上图进行地址配置[AR1]acl 2000[AR1-acl-basic-2000]rule permit source 192.168.1.2 0[AR1-acl-basic-2000]rule permit source 192.168.1.3 0[AR1-acl-basic-2000]int g 0/0/0[AR1-GigabitEthernet0/0/0]nat outbound 2000 ​ 以下是实际工作环境实例 十四、防火墙防火墙分类 包过滤、代理、状态检测(精确匹配，能处理应用层) 主机、网络 硬件、软件 防火墙与路由器的区别 原理 侧重 工作层级 其他 防火墙 基于区域 重在数据控制 网络层、链路层 ….. 路由器 基于接口转发数据 重在转发 网络层 … 区域与接口的关系 接口必须加入到区域才能够使用 一个区域可以有多个接口 一个接口只能属于一个区域 区域 Local 本地（防火墙自己） 优先级100 防火墙的所有接口都属于这个区域 Trust 信任（内外，工作区）优先级 85 Untrust 非信任（外网） 优先级5 DMZ 非军事化区域（内网，服务器区） 优先级50 Vzone 虚拟区域 优先级 0 安全级别（优先级）取值范围（0-100） 数值越小，越不安全 唯一性 不能冲突，两个区域不能有相同的优先级 方向入 低安全级别的区域 到 高安全级别的区域 ​ eg. Utrust 5 &gt;&gt;&gt; Trust 85 出 高安全级别的区域 到 低安全级别的区域 ​ eg.Utrust 5 &gt;&gt;&gt; Trust 85 策略及规则（防火墙进行数据转发的规则）默认策略 自定义策略（优先） 在默认情况下： 防火墙不允许数据穿越 防火墙可以发出数据，但是不允许数据进入 区域内可以相互通讯 防火墙（Local）可以和Trust区域通讯 基本配置1234567[SRG]firewall zone name hcie[SRG-zone-hcie]set priority 10[SRG-zone-hcie]display zone[SRG-zone-hcie]add interface g0/0/5&lt;SRG&gt;display firewall packet-filter default interzone local dmz //到dma默认区域的传送规则&lt;SRG&gt;display firewall packet-filter default interzone local trust//要到trust默认区域传送的规则&lt;SRG&gt;display firewall packet-filter default interzone trust untrust //要转发的数据默认区域传送的规则 防火墙基础案例 12345678910111213[SRG]int g 0/0/1[SRG-GigabitEthernet0/0/1]ip ad 192.168.1.1 24[SRG]int g 0/0/2[SRG-GigabitEthernet0/0/2]ip ad 192.168.2.1 24[SRG]firewall zone trust[SRG-zone-trust]add int g 0/0/2[SRG]firewall zone untrust[SRG-zone-trust]add int g 0/0/1[SRG]firewall packet-filter default permit interzone untrust trust[SRG]firewall packet-filter default permit interzone untrust trust direction inbound //允许untrust进入trust[SRG]firewall packet-filter default permit interzone untrust trust direction outbound //允许untrust出trust 自定义策略1234[SRG]policy interzone untrust trust outbound [SRG-policy-interzone-trust-untrust-outbound-0]policy 1[SRG-policy-interzone-trust-untrust-outbound-1]policy source 192.168.2.1 0[SRG-policy-interzone-trust-untrust-outbound-1]action deny 十五、Mux VLAN基本概念Mux Vkan提供了一种在Vlan的端口间进行二层流量隔离的机制 主VLAN 从VLAN ​隔离型从VLAN ​互通型从VLAN 4种通信方式 从VLAN可以主VLAN通信 从VLAN之间不能通信 隔离型从VLAN内部不能通信 互通型从VLAN内部可以互通 Mux VLAN的配置 1234567891011121314[Huawei]vlan b 10 20 100[Huawei]interface Ethernet0/0/1[Huawei-Ethernet0/0/1]port link-type access[Huawei-Ethernet0/0/1]port default vlan 10[Huawei-Ethernet0/0/1]port mux-vlan enable[Huawei-Ethernet0/0/1]int e 0/0/2[Huawei-Ethernet0/0/2]port default vlan 10[Huawei-Ethernet0/0/2]port mux-vlan enabledis vlan其余配置 E 0/0/3 和E 0/0/4配 VLAN 20 + port mux-vlan enable[Huawei-Ethernet0/0/5]vl 100[Huawei-vlan100]mux-vlan [Huawei-vlan100]subordinate separate 20[Huawei-vlan100]subordinate group 10 十六、端口隔离 配置 1234[Huawei]int e 0/0/1[Huawei-Ethernet0/0/1]port-isolate enable[Huawei]int e 0/0/2[Huawei-Ethernet0/0/2]port-isolate enable 十七、ARP代理ARP 将一个已知的IP地址解析成为一个MAC地址 链路层 LLC 逻辑链路控制 MAC 媒体访问控制 VLAN内 VAN间 路由式 ARP代理的配置启用ARP代理功能之后，会出现一个MAC地址对应多个IP的情况，正常情况下是一个IP对应一个MAC 123[Huawei]int vl 1[Huawei-Vlanif1]ip ad 192.168.1.1 24 [Huawei-Vlanif1]arp-proxy inner-sub-vlan-proxy enable ##允许区域内arp代理 配置完成后PC1的ARP信息 Super VLAN的应用和配置 VLAN多、交换机多、网段多 IP地址规划变得复杂 有没有一种方案，可以实现不同VLAN，但是相同网段？ 所有VLAN都是属于一个网段 使用VLAN间的ARP代理功能来实现不同VLAN相同网段的通信 123456前面的配置 创建VLAN 10 20 30 100 将0/0/1 0/0/2 0/0/3 分别加入VLAN 10 20 30 进入VLAN 100[Huawei-vlan100]aggregate-vlan[Huawei-Vlanif100]ip add 192.168.1.1 24[Huawei-Vlanif100]arp-proxy inter-sub-vlan-proxy enable ##允许区域间arp代理 十八、路由器ARP代理 1234按照上图配置ip[Huawei]int g 0/0/1[Huawei-GigabitEthernet0/0/1]arp-proxy enable ##允许arp代理R2 int g 0/0/1 配置一样 十九、策略路由策略路由 数据转发不依赖于路由表 根据策略实现数据转发 仅作用于本地· 12345678910111213按照上图配置ip地址然后配置R1-R5 配置 OSPF[R1]acl 2001[R1-acl-basic-2001]rule permit source 10.10.10.10 0[R1]acl 2002[R1-acl-basic-2002]rule permit source 10.10.10.20 0[R1]policy-based-route test permit node 1 ##BFD1 1号规则[R1-policy-based-route-test-1]if-match acl 2001[R1-policy-based-route-test-1]apply ip-address next-hop 192.168.1.2[R1]policy-based-route test permit node 2 ##BFD1 2号规则[R1-policy-based-route-test-2]if-match acl 2002[R1-policy-based-route-test-2]apply ip-address next-hop 192.168.2.2[R1]ip local policy-based-route test 配置完成后的tracert结果 二十、BFD的配置双向转达检测 12345678910111213按照上图配置IP地址在路由器R1配置两条静态路由 其中上面的优先级设置为50[R1]ip route-static 10.10.10.10 255.255.255.255 192.168.1.2 preference 50[R1]ip route-static 10.10.10.10 255.255.255.255 192.168.2.2[R1]bfd[R1-bfd]bfd 1 bind peer-ip 192.168.1.2 source-ip 192.168.1.1 auto[R1-bfd-session-1]commit[R1]ip route-static 10.10.10.10 255.255.255.255 192.168.1.2 preference 50 track bfd-session 1在R2配置[R2]bfd[R2-bfd]bfd 1 bind peer-ip 192.168.1.1 source-ip 192.168.1.2 auto[R2-bfd-session-1]commit在路由器R1配置下面一半的BFD-session 2 十九、策略路由策略路由 数据转发不依赖于路由表 根据策略实现数据转发 仅作用于本地· 12345678910111213按照上图配置ip地址然后配置R1-R5 配置 OSPF[R1]acl 2001[R1-acl-basic-2001]rule permit source 10.10.10.10 0[R1]acl 2002[R1-acl-basic-2002]rule permit source 10.10.10.20 0[R1]policy-based-route test permit node 1 ##BFD1 1号规则[R1-policy-based-route-test-1]if-match acl 2001[R1-policy-based-route-test-1]apply ip-address next-hop 192.168.1.2[R1]policy-based-route test permit node 2 ##BFD1 2号规则[R1-policy-based-route-test-2]if-match acl 2002[R1-policy-based-route-test-2]apply ip-address next-hop 192.168.2.2[R1]ip local policy-based-route test 配置完成后的tracert结果 二十、BFD的配置双向转达检测 12345678910111213按照上图配置IP地址在路由器R1配置两条静态路由 其中上面的优先级设置为50[R1]ip route-static 10.10.10.10 255.255.255.255 192.168.1.2 preference 50[R1]ip route-static 10.10.10.10 255.255.255.255 192.168.2.2[R1]bfd[R1-bfd]bfd 1 bind peer-ip 192.168.1.2 source-ip 192.168.1.1 auto[R1-bfd-session-1]commit[R1]ip route-static 10.10.10.10 255.255.255.255 192.168.1.2 preference 50 track bfd-session 1在R2配置[R2]bfd[R2-bfd]bfd 1 bind peer-ip 192.168.1.1 source-ip 192.168.1.2 auto[R2-bfd-session-1]commit在路由器R1配置下面一半的BFD-session 2 二十一、虚拟路由器VRRP50ms以内的数据转发才能称为高可靠性 12345678910[R1]display vrrp interface e 0/0/0 查看信息[R1-GigabitEthernet0/0/1]vrrp vrid 1 virtual-ip 192.168.1.100[R1-GigabitEthernet0/0/1]vrrp vrid 1 priority 200设置VRID1 的优先级为200 [R1-GigabitEthernet0/0/1]vrrp vrid 1 track interface GigabitEthernet 0/0/0 reduced 150[R1-GigabitEthernet0/0/1]vrrp vrid 2 virtual-ip 192.168.1.200R2上的配置[R2-GigabitEthernet0/0/1]vrrp vrid 1 virtual-ip 192.168.1.100[R2-GigabitEthernet0/0/1]vrrp vrid 2 virtual-ip 192.168.1.200[R2-GigabitEthernet0/0/1]vrrp vrid 2 priority 200 //设置VRID2 的优先级为200[R2-GigabitEthernet0/0/1]vrrp vrid 2 track interface GigabitEthernet 0/0/2 reduced 150 ##]]></content>
  </entry>
</search>
